# HR Attrition Predictor - Git Ignore Configuration
# ================================================
# Comprehensive gitignore for ML/Data Science project
# Author: HR Analytics Team
# Date: September 2025

# ================================================================
# PYTHON SPECIFIC
# ================================================================

# Byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]
*$py.class

# C extensions
*.so

# Distribution / packaging
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
*.manifest
*.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
*.py,cover
.hypothesis/
.pytest_cache/
cover/

# Translations
*.mo
*.pot

# Django stuff:
*.log
local_settings.py
db.sqlite3
db.sqlite3-journal

# Flask stuff:
instance/
.webassets-cache

# Scrapy stuff:
.scrapy

# Sphinx documentation
docs/_build/

# PyBuilder
.pybuilder/
target/

# Jupyter Notebook
.ipynb_checkpoints

# IPython
profile_default/
ipython_config.py

# pyenv
#   For a library or package, you might want to ignore these files since the code is
#   intended to run in multiple environments; otherwise, check them in:
.python-version

# pipenv
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
#   install all needed dependencies.
Pipfile.lock

# poetry
#   Similar to Pipfile.lock, it is generally recommended to include poetry.lock in version control.
#   This is especially recommended for binary packages to ensure reproducibility, and is more
#   commonly ignored for libraries.
#   https://python-poetry.org/docs/basic-usage/#commit-your-poetrylock-file-to-version-control
poetry.lock

# pdm
#   Similar to Pipfile.lock, it is generally recommended to include pdm.lock in version control.
pdm.lock
#   pdm stores project-wide configurations in .pdm.toml, but it is recommended to not include it
#   in version control.
#   https://pdm.fming.dev/#use-with-ide
.pdm.toml

# PEP 582; used by e.g. github.com/David-OConnor/pyflow and github.com/pdm-project/pdm
__pypackages__/

# Celery stuff
celerybeat-schedule
celerybeat.pid

# SageMath parsed files
*.sage.py

# Environments
.env
.venv
env/
venv/
ENV/
env.bak/
venv.bak/

# Spyder project settings
.spyderproject
.spyproject

# Rope project settings
.ropeproject

# mkdocs documentation
/site

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# Pyre type checker
.pyre/

# pytype static type analyzer
.pytype/

# Cython debug symbols
cython_debug/

# ================================================================
# DATA SCIENCE & ML SPECIFIC
# ================================================================

# Datasets (add specific data files you don't want to track)
data/raw/*.csv
data/raw/*.xlsx
data/raw/*.json
data/raw/*.parquet
data/processed/*.csv
data/processed/*.xlsx
data/processed/*.json
data/processed/*.parquet

# Large data files
*.h5
*.hdf5
*.pickle
*.pkl
*.joblib

# Model files (trained models can be large)
models/saved/*.pkl
models/saved/*.joblib
models/saved/*.h5
models/saved/*.model
models/saved/*.bin
models/checkpoints/
models/artifacts/

# MLflow tracking
mlruns/
mlartifacts/

# Weights & Biases
wandb/

# TensorFlow/Keras
*.pb
saved_model/
checkpoint
model.ckpt.*
*.tflite

# PyTorch
*.pth
*.pt

# Scikit-learn
*.joblib

# Feature store
features/cached/
features/preprocessed/

# ================================================================
# JUPYTER & NOTEBOOK SPECIFIC
# ================================================================

# Jupyter Notebook checkpoints
.ipynb_checkpoints/
*/.ipynb_checkpoints/

# Jupyter Lab workspaces
.jupyter-workspaces/

# Notebook outputs (optional - comment out if you want to track outputs)
*.ipynb

# ================================================================
# IDE & EDITOR SPECIFIC
# ================================================================

# Visual Studio Code
.vscode/
*.code-workspace

# PyCharm
.idea/
*.iml
*.iws

# Sublime Text
*.sublime-project
*.sublime-workspace

# Vim
*.swp
*.swo
*~

# Emacs
*~
\#*\#
/.emacs.desktop
/.emacs.desktop.lock
*.elc
auto-save-list
tramp
.\#*

# ================================================================
# OPERATING SYSTEM SPECIFIC
# ================================================================

# macOS
.DS_Store
.AppleDouble
.LSOverride

# Icon must end with two \r
Icon

# Thumbnails
._*

# Files that might appear in the root of a volume
.DocumentRevisions-V100
.fseventsd
.Spotlight-V100
.TemporaryItems
.Trashes
.VolumeIcon.icns
.com.apple.timemachine.donotpresent

# Directories potentially created on remote AFP share
.AppleDB
.AppleDesktop
Network Trash Folder
Temporary Items
.apdisk

# Windows
Thumbs.db
Thumbs.db:encryptable
ehthumbs.db
ehthumbs_vista.db

# Dump file
*.stackdump

# Folder config file
[Dd]esktop.ini

# Recycle Bin used on file shares
$RECYCLE.BIN/

# Windows Installer files
*.cab
*.msi
*.msix
*.msm
*.msp

# Windows shortcuts
*.lnk

# Linux
*~

# temporary files which can be created if a process still has a handle open of a deleted file
.fuse_hidden*

# KDE directory preferences
.directory

# Linux trash folder which might appear on any partition or disk
.Trash-*

# .nfs files are created when an open file is removed but is still being accessed
.nfs*

# ================================================================
# PROJECT SPECIFIC FILES
# ================================================================

# Configuration files with secrets
config/secrets.yaml
config/database.yaml
config/.env
config/smtp_config.yaml

# API keys and credentials
*.key
*.pem
*.crt
credentials/
secrets/

# Temporary files
temp/
tmp/
*.tmp

# Log files
logs/
*.log
log.txt

# Cache directories
cache/
.cache/
__pycache__/

# Results and outputs
results/evaluation/plots/
results/reports/
results/exports/
outputs/
exports/

# Streamlit cache
.streamlit/

# Docker
.dockerignore

# ================================================================
# DEPLOYMENT & INFRASTRUCTURE
# ================================================================

# Terraform
*.tfstate
*.tfstate.*
.terraform/
.terraform.lock.hcl
*.tfvars

# Docker
docker-compose.override.yml
.docker/

# Kubernetes
*.kubeconfig

# Cloud provider specific
.aws/
.gcp/
.azure/

# ================================================================
# DATABASE FILES
# ================================================================

# SQLite databases
*.db
*.sqlite
*.sqlite3

# Database dumps
*.sql
*.dump

# ================================================================
# EMAIL TEMPLATES & STATIC FILES
# ================================================================

# Generated email templates
emails/generated/
email_cache/

# Static file cache
static/cache/
static/generated/

# ================================================================
# TESTING & QUALITY ASSURANCE
# ================================================================

# Test databases
test.db
test.sqlite
test_*.db

# Coverage reports
coverage/
.coverage.*
htmlcov/

# Performance profiling
*.prof
*.profile

# Memory profiling
*.mprof

# ================================================================
# DOCUMENTATION
# ================================================================

# Build directories
docs/build/
docs/_build/
site/

# Auto-generated docs
docs/api/
docs/auto/

# ================================================================
# BACKUP FILES
# ================================================================

# Backup files
*.bak
*.backup
*.old
*.orig
*.save

# Version control backups
*.rej

# ================================================================
# PACKAGE MANAGERS
# ================================================================

# npm (if using Node.js for any frontend components)
node_modules/
npm-debug.log*
yarn-debug.log*
yarn-error.log*

# Bower
bower_components/

# ================================================================
# CUSTOM IGNORE PATTERNS FOR THIS PROJECT
# ================================================================

# HR specific data files (sensitive employee information)
data/employee_data/
data/hr_records/
data/personal_info/

# Model training artifacts
training_logs/
model_experiments/
hyperparameter_tuning/

# Email service cache
email_cache/
smtp_logs/

# Admin panel logs
admin_logs/
user_sessions/

# Synthetic data generation cache
data/synthetic/cache/

# Performance monitoring data
monitoring/
metrics_cache/

# Report exports
reports/generated/
reports/exports/

# Custom configuration overrides
config/local/
config/development/
config/production/

# Streamlit secrets and config
.streamlit/secrets.toml
.streamlit/config.toml

# Custom scripts (might contain sensitive operations)
scripts/migration/
scripts/data_import/
scripts/cleanup/

# ================================================================
# OPTIONAL: COMMENT OUT IF YOU WANT TO TRACK THESE
# ================================================================

# # Sample data (uncomment if you want to track sample datasets)
# data/samples/
# data/demo/

# # Documentation assets (uncomment if you want to track generated docs)
# docs/images/
# docs/screenshots/

# # Example configurations (uncomment if you want to track examples)
# config/examples/
# config/templates/

# ================================================================
# END OF GITIGNORE
# ================================================================

# Add any project-specific patterns below this line
